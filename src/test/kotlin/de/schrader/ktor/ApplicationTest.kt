/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package de.schrader.ktor

import com.google.gson.Gson
import io.ktor.application.Application
import io.ktor.http.ContentType
import io.ktor.http.HttpHeaders
import io.ktor.http.HttpMethod
import io.ktor.http.HttpStatusCode
import io.ktor.server.testing.handleRequest
import io.ktor.server.testing.setBody
import io.ktor.server.testing.withTestApplication
import kotlin.test.AfterTest
import kotlin.test.BeforeTest
import kotlin.test.Test
import kotlin.test.assertEquals

class ApplicationTest {

    private val gson = Gson()

    data class TestPerson(val name: String, var age: Int)

    @BeforeTest fun setUp() {
    }

    @AfterTest fun tearDown() {
    }

    @Test fun when_get_person_then_person_is_returned() = withTestApplication(Application::module) {

        with(handleRequest(HttpMethod.Post, "/person") {
            addHeader(HttpHeaders.ContentType, ContentType.Application.Json.toString())
            setBody(gson.toJson(TestPerson(name = "Vinz", age = 20)))
        }) {
            assertEquals(HttpStatusCode.Created, response.status())
            // val person = gson.fromJson(response.content, TestPerson::class.java)
        }

        with(handleRequest(HttpMethod.Get, "/person")) {
            assertEquals(HttpStatusCode.OK, response.status())
            /*val person =*/ gson.fromJson(response.content, TestPerson::class.java)
//            assertEquals("Max", person.name)
//            assertEquals(30, person.age)
        }
    }
}
